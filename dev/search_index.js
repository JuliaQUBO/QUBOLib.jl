var documenterSearchIndex = {"docs":
[{"location":"manual/2-advanced/#Advanced-Usage","page":"Advanced Usage","title":"Advanced Usage","text":"","category":"section"},{"location":"manual/2-advanced/#Adding-a-new-collection","page":"Advanced Usage","title":"Adding a new collection","text":"","category":"section"},{"location":"manual/2-advanced/#Acessing-Internal-Data","page":"Advanced Usage","title":"Acessing Internal Data","text":"","category":"section"},{"location":"manual/2-advanced/","page":"Advanced Usage","title":"Advanced Usage","text":"One is able to acess the database and archive of a QUBOLib.LibraryIndex by recalling the QUBOLib.database and QUBOLib.archive functions.","category":"page"},{"location":"manual/2-advanced/","page":"Advanced Usage","title":"Advanced Usage","text":"using QUBOLib\n\nQUBOLib.access() do index\n    db = QUBOLib.database(index)\n    h5 = QUBOLib.archive(index)\nend","category":"page"},{"location":"api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"api/#Actions","page":"API","title":"Actions","text":"","category":"section"},{"location":"api/#Path-Routing","page":"API","title":"Path Routing","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.library_path\nQUBOLib.database_path\nQUBOLib.archive_path","category":"page"},{"location":"api/#QUBOLib.library_path","page":"API","title":"QUBOLib.library_path","text":"library_path()::AbstractString\n\nReturns the absolute path to the QUBOLib artifact.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.database_path","page":"API","title":"QUBOLib.database_path","text":"database_path(path::AbstractString=library_path())::AbstractString\n\nReturns the absolute path to the database file, given a reference library path path.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.archive_path","page":"API","title":"QUBOLib.archive_path","text":"archive_path(path::AbstractString=library_path())::AbstractString\n\nReturns the absolute path to the archive file, given a reference library path path.\n\n\n\n\n\n","category":"function"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.root_path\nQUBOLib.dist_path\nQUBOLib.build_path\nQUBOLib.cache_path","category":"page"},{"location":"api/#QUBOLib.root_path","page":"API","title":"QUBOLib.root_path","text":"root_path()::AbstractString\n\nReturns the absolute path to the project's root folder.\n\ninfo: Info\nThe dist_path, build_path, and cache_path functions are more often used when building the library, therefore they will point to the the project's root path by default, by referencing this function.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.dist_path","page":"API","title":"QUBOLib.dist_path","text":"dist_path(path::AbstractString=root_path())::AbstractString\n\nReturns the absolute path to the distribution folder, given a reference root path path.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.build_path","page":"API","title":"QUBOLib.build_path","text":"build_path(path::AbstractString=root_path())::AbstractString\n\nReturns the absolute path to the build folder, given a reference root path path.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.cache_path","page":"API","title":"QUBOLib.cache_path","text":"cache_path(path::AbstractString=root_path())::AbstractString\n\nReturns the absolute path to the cache folder, given a reference root path path.\n\n\n\n\n\n","category":"function"},{"location":"api/#Library-Index","page":"API","title":"Library Index","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.LibraryIndex","category":"page"},{"location":"api/#QUBOLib.LibraryIndex","page":"API","title":"QUBOLib.LibraryIndex","text":"LibraryIndex\n\nThe QUBOLib index is composed of two pieces: a SQLite database and an HDF5 archive.\n\n\n\n\n\n","category":"type"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.database\nQUBOLib.archive","category":"page"},{"location":"api/#QUBOLib.database","page":"API","title":"QUBOLib.database","text":"database(index::LibraryIndex)::SQLite.DB\n\nReturns a pointer that grants direct access to the SQLite database of the library index.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.archive","page":"API","title":"QUBOLib.archive","text":"archive(index::LibraryIndex)::HDF5.File\n\nReturns a pointer that grants direct access to the HDF5 archive of the library index.\n\n\n\n\n\n","category":"function"},{"location":"api/#Data-Access","page":"API","title":"Data Access","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.access","category":"page"},{"location":"api/#QUBOLib.access","page":"API","title":"QUBOLib.access","text":"access(\n    callback;\n    path::Union{AbstractString,Nothing} = nothing,\n    create::Bool = false\n)::LibraryIndex\n\nLoads the index for an instance library.\n\nIf path is not provided, the latest QUBOLib artifact will be used.\n\nExample\n\nusing QUBOLib\n\nQUBOLib.access() do index\n    print(index) # Show some information about the index\nend\n\n\n\n\n\n","category":"function"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.load_collection\nQUBOLib.load_instance\nQUBOLib.load_solution","category":"page"},{"location":"api/#QUBOLib.load_collection","page":"API","title":"QUBOLib.load_collection","text":"load_collection(index::LibraryIndex, code::Symbol)\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.load_instance","page":"API","title":"QUBOLib.load_instance","text":"load_instance(index::LibraryIndex, instance::Integer)\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.load_solution","page":"API","title":"QUBOLib.load_solution","text":"load_solution(index::LibraryIndex, solution::Integer)\nload_solution(index::LibraryIndex, instance::Integer, solution::Integer)\n\n\n\n\n\n","category":"function"},{"location":"api/#Data-Management","page":"API","title":"Data Management","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.add_collection!\nQUBOLib.add_instance!\nQUBOLib.add_solution!\nQUBOLib.add_solver!","category":"page"},{"location":"api/#QUBOLib.add_collection!","page":"API","title":"QUBOLib.add_collection!","text":"add_collection!(index::LibraryIndex, code::Symbol, data::Dict{String,Any})\n\nCreates a new collection in the library index.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.add_instance!","page":"API","title":"QUBOLib.add_instance!","text":"add_instance!(index::LibraryIndex, coll::Symbol, model::QUBOTools.Model{Int,Float64,Int})\n\nAdds a new instance to the library index.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.add_solution!","page":"API","title":"QUBOLib.add_solution!","text":"add_solution!(index::LibraryIndex, instance::Integer, solution::SampleSet{Float64,Int})\n\nRegisters a new solution for a given instance.\n\nThe solution argument is a QUBOTools.SampleSet, which is a collection of samples and their respective energies.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.add_solver!","page":"API","title":"QUBOLib.add_solver!","text":"add_solver!(index::LibraryIndex, code::Symbol, data::Dict{String,Any})\n\nRegisters a new solver in the library index.\n\n\n\n\n\n","category":"function"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.remove_collection!\nQUBOLib.remove_instance!\nQUBOLib.remove_solution!\nQUBOLib.remove_solver!","category":"page"},{"location":"api/#QUBOLib.remove_collection!","page":"API","title":"QUBOLib.remove_collection!","text":"remove_collection!(index::LibraryIndex, code::Symbol)\n\nRemoves a collection and its contents from the library index.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.remove_instance!","page":"API","title":"QUBOLib.remove_instance!","text":"remove_instance!(index::LibraryIndex, coll::Symbol, instance::Integer)\n\nRemoves an instance from the library index.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.remove_solution!","page":"API","title":"QUBOLib.remove_solution!","text":"remove_solution!(index::LibraryIndex, instance::Integer, solution::Integer)\n\nRemoves a solution from the library index.\n\n\n\n\n\n","category":"function"},{"location":"api/#QUBOLib.remove_solver!","page":"API","title":"QUBOLib.remove_solver!","text":"remove_solver!(index::LibraryIndex, code::Symbol)\n\nRemoves a solver from the library index.\n\n\n\n\n\n","category":"function"},{"location":"api/#Instance-Synthesis","page":"API","title":"Instance Synthesis","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.Synthesis.AbstractProblem\nQUBOLib.Synthesis.generate","category":"page"},{"location":"api/#QUBOLib.Synthesis.AbstractProblem","page":"API","title":"QUBOLib.Synthesis.AbstractProblem","text":"AbstractProblem{T}\n\n\n\n\n\n","category":"type"},{"location":"api/#QUBOLib.Synthesis.generate","page":"API","title":"QUBOLib.Synthesis.generate","text":"generate(problem::AbstractProblem{T}) where {T}\ngenerate(rng, problem::AbstractProblem{T}) where {T}\n\nGenerates a QUBO problem and returns it as a QUBOTools.Model.\n\n\n\n\n\n","category":"function"},{"location":"api/#Problem-Types","page":"API","title":"Problem Types","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"QUBOLib.Synthesis.NAE3SAT\nQUBOLib.Synthesis.XORSAT\nQUBOLib.Synthesis.Wishart\nQUBOLib.Synthesis.SherringtonKirkpatrick","category":"page"},{"location":"api/#QUBOLib.Synthesis.NAE3SAT","page":"API","title":"QUBOLib.Synthesis.NAE3SAT","text":"NAE3SAT{T}(m::Integer, n::Integer)\n\nNot-all-equal 3-SAT on m clauses and n variables.\n\n\n\n\n\n","category":"type"},{"location":"api/#QUBOLib.Synthesis.XORSAT","page":"API","title":"QUBOLib.Synthesis.XORSAT","text":"XORSAT{T}(n::Integer, r::Integer = 3, k::Integer = 3)\n\nr-regular k-XORSAT on n variables.\n\n\n\n\n\n","category":"type"},{"location":"api/#QUBOLib.Synthesis.Wishart","page":"API","title":"QUBOLib.Synthesis.Wishart","text":"Wishart{T}(n::Integer, m::Integer)\n\nRepresents the Wishart model on n variables whose mathbfW matrix has m columns.\n\nWhen true, the discretize keyword limits the entries of the mathbfR matrix to pm 1. The precision, on the other hand, is the amount of digits to round each entry R_ij after sampling from a normal distribution mathcalN(0 1).\n\n\n\n\n\n","category":"type"},{"location":"api/#QUBOLib.Synthesis.SherringtonKirkpatrick","page":"API","title":"QUBOLib.Synthesis.SherringtonKirkpatrick","text":"SherringtonKirkpatrick{T}(n::Integer, μ::T, σ::T)\n\nGenerates a Sherrington-Kirkpatrick model in n variables. Coefficients are normally distributed with mean mu and variance sigma.\n\n\n\n\n\n","category":"type"},{"location":"manual/1-basic/#Basic-Usage","page":"Basic Usage","title":"Basic Usage","text":"","category":"section"},{"location":"manual/1-basic/#Getting-Started","page":"Basic Usage","title":"Getting Started","text":"","category":"section"},{"location":"manual/1-basic/","page":"Basic Usage","title":"Basic Usage","text":"using QUBOLib\n\nQUBOLib.access() do index\n    print(index)\nend","category":"page"},{"location":"booklet/2-build/#Build-Process","page":"Build Process","title":"Build Process","text":"","category":"section"},{"location":"booklet/2-build/","page":"Build Process","title":"Build Process","text":"Building QUBOLib from scratch","category":"page"},{"location":"booklet/2-build/#Distribution-Folder-structure","page":"Build Process","title":"Distribution Folder structure","text":"","category":"section"},{"location":"booklet/2-build/","page":"Build Process","title":"Build Process","text":"dist\n├── build\n│   ├── Artifact.toml\n│   ├── git-tree.hash\n│   ├── tar-ball.hash\n│   ├── last.tag\n│   └── next.tag\n└── cache\n    └── collection...\n        └── data\nqubolib\n├── archive.h5\n└── index.db","category":"page"},{"location":"#QUBOLib.jl","page":"Home","title":"QUBOLib.jl","text":"","category":"section"},{"location":"#Getting-Started","page":"Home","title":"Getting Started","text":"","category":"section"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"import Pkg\n\nPkg.add(url=\"https://github.com/JuliaQUBO/QUBOLib.jl\")\n\nusing QUBOLib","category":"page"},{"location":"manual/0-intro/#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"manual/0-intro/#Benchmarking-Physics-Inspired-Optimization-Solvers","page":"Introduction","title":"Benchmarking Physics-Inspired Optimization Solvers","text":"","category":"section"},{"location":"manual/0-intro/#Mathematical-Definitions","page":"Introduction","title":"Mathematical Definitions","text":"","category":"section"},{"location":"manual/0-intro/","page":"Introduction","title":"Introduction","text":"All instances have been recast into the binary, minimization form:","category":"page"},{"location":"manual/0-intro/","page":"Introduction","title":"Introduction","text":"beginarrayrll\n    displaystyle\n    min_mathbfx  alpha left mathbfx mathbfQ  mathbfx + mathbfell mathbfx + beta right \n    textrmst      mathbfx in mathbbB^n \nendarray","category":"page"},{"location":"manual/0-intro/","page":"Introduction","title":"Introduction","text":"where mathbfQ in mathbbR^n times n is an upper triangular matrix, mathbfell in mathbbR^n is a vector, alpha beta in mathbbR are scalars, and mathbbB^n is the set of binary vectors of length n.","category":"page"},{"location":"manual/0-intro/#Table-of-Contents","page":"Introduction","title":"Table of Contents","text":"","category":"section"},{"location":"manual/0-intro/","page":"Introduction","title":"Introduction","text":"Basic Usage","category":"page"},{"location":"booklet/1-design/#Database-Design","page":"Database Design","title":"Database Design","text":"","category":"section"},{"location":"booklet/1-design/","page":"Database Design","title":"Database Design","text":"In this section we discuss the decisions and specifications behind the construction of the database.","category":"page"},{"location":"booklet/1-design/#Models-and-Solutions","page":"Database Design","title":"Models and Solutions","text":"","category":"section"},{"location":"booklet/1-design/","page":"Database Design","title":"Database Design","text":"The HDF5 file format is used to store the data. The data is stored in a hierarchical structure, which is a natural fit for the data. The data is stored in a tree-like structure, with the root group being the top level. The root group contains the following groups:","category":"page"},{"location":"booklet/1-design/","page":"Database Design","title":"Database Design","text":"instances: Contains the instances of the data.\nsolutions: Contains the solutions to the instances.","category":"page"},{"location":"booklet/1-design/#Collections","page":"Database Design","title":"Collections","text":"","category":"section"},{"location":"booklet/1-design/","page":"Database Design","title":"Database Design","text":"One of the core ideas behind QUBOLib is to deploy other QUBO instance libraries in a bundle.","category":"page"}]
}
